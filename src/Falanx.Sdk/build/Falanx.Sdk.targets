<Project>

  <!--
    Input to the code generator should not include its output.
  -->
  <Target Name="_FalanxSdkProtoFilesList"
          BeforeTargets="FalanxSdkGenerateInputCache">
    <ItemGroup>
      <ProtoFileCodegen Include="%(ProtoFile.FullPath)">
        <OutputPath Condition=" '%(ProtoFile.OutputPath)' != '' ">$([System.IO.Path]::GetFullPath('%(ProtoFile.OutputPath)'))</OutputPath>
        <OutputPath Condition=" '%(ProtoFile.OutputPath)' == '' ">%(ProtoFile.FullPath).fs</OutputPath>
      </ProtoFileCodegen>
    </ItemGroup>
    <!--

    -->
    <PropertyGroup>
      <_FalanxSdkCodeGenInputCache>$(IntermediateOutputPath)$(MSBuildProjectFile).FalanxSdkCodeGenInputs.cache</_FalanxSdkCodeGenInputCache>
    </PropertyGroup>
  </Target>

  <!--
    Update the file which captures the total set of all inputs to the code generator.
    This is based on the _GenerateCompileDependencyCache target from the .NET project system.
  -->
  <Target Name="FalanxSdkGenerateInputCache"
          DependsOnTargets="ResolveAssemblyReferences;_FalanxSdkProtoFilesList"
          BeforeTargets="FalanxSdkGenerateCode">

    <ItemGroup>
      <FalanxSdk_CodeGenInputs Include="@(ProtoFileCodegen);@(ReferencePath);$(FalanxSdk_GeneratorExe)" />
    </ItemGroup>

    <Hash ItemsToHash="@(FalanxSdk_CodeGenInputs)">
      <Output TaskParameter="HashResult" PropertyName="FalanxSdk_UpdatedInputCacheContents" />
    </Hash>

    <WriteLinesToFile
      Overwrite="true"
      File="$(_FalanxSdkCodeGenInputCache)"
      Lines="$(FalanxSdk_UpdatedInputCacheContents)"
      WriteOnlyWhenDifferent="True" />

    <Touch Files="$(_FalanxSdkCodeGenInputCache)"
           Condition= " '$(FalanxWaitDebugger)' == 'true' " />

  </Target>

  <PropertyGroup>
    <FalanxSdkGenerateCodeDependsOn>$(FalanxSdkGenerateCodeDependsOn);ResolveReferences;FalanxSdkGenerateInputCache</FalanxSdkGenerateCodeDependsOn>
  </PropertyGroup>

  <Target Name="FalanxSdkGenerateCode"
          DependsOnTargets="$(FalanxSdkGenerateCodeDependsOn)"
          BeforeTargets="CoreCompile"
          Condition=" '$(DesignTimeBuild)' != 'true' "
          Inputs="@(ProtoFileCodegen);$(_FalanxSdkCodeGenInputCache);$(FalanxSdk_GeneratorExe)"
          Outputs="%(ProtoFileCodegen.OutputPath)">

    <PropertyGroup>
      <_FalanxSdk_InputFileName>%(ProtoFileCodegen.Identity)</_FalanxSdk_InputFileName>
      <_FalanxSdk_OutputFileName>%(ProtoFileCodegen.OutputPath)</_FalanxSdk_OutputFileName>
    </PropertyGroup>

    <ItemGroup>
      <FalanxSdk_CodeGenArgs Include='--inputfile "$(_FalanxSdk_InputFileName)"' />
      <FalanxSdk_CodeGenArgs Include='--outputfile "$(_FalanxSdk_OutputFileName)"' />
      <FalanxSdk_CodeGenArgs Include='--defaultnamespace "$(RootNamespace)"' />
      <FalanxSdk_CodeGenArgs Include='--serializer %(FalanxSdkSerializer.Identity)' />
      <FalanxSdk_CodeGenArgs Include='--wait-debugger' Condition= " '$(FalanxWaitDebugger)' == 'true' " />
    </ItemGroup>

    <!-- Use dotnet to execute the process. -->
    <Exec Command="$(FalanxSdk_GeneratorExeHost)&quot;$(FalanxSdk_GeneratorExe)&quot; @(FalanxSdk_CodeGenArgs -> '%(Identity)', ' ')" />

    <ItemGroup>
      <CompileBefore Include="$(_FalanxSdk_OutputFileName)" Condition="Exists('$(_FalanxSdk_OutputFileName)')" />
    </ItemGroup>
  </Target>

  <Target Name="FalanxSdkIncludeCodegenOutputDuringDesignTimeBuild"
          BeforeTargets="CoreCompile"
          Condition=" '$(DesignTimeBuild)' == 'true' ">
    <ItemGroup>
      <CompileBefore Include="%(ProtoFileCodegen.OutputPath)" />
    </ItemGroup>
  </Target>

</Project>